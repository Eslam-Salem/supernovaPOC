import SwiftUI

// Generated by Supernova - do not modify manually
public extension Color {
    
    static let Token = Color.TokenColor()
    
    struct TokenColor {

        // color

        // Primary
        public let colorPrimaryP1 = Color(.sRGB, red: 230/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorPrimaryP2 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colorPrimaryP3 = Color(.sRGB, red: 74/255, green: 77/255, blue: 78/255, opacity: 1) 
        public let colorPrimaryP4 = Color(.sRGB, red: 37/255, green: 40/255, blue: 43/255, opacity: 1) 

        // Secondary
        public let colorSecondaryS1 = Color(.sRGB, red: 0/255, green: 105/255, blue: 124/255, opacity: 1) 
        public let colorSecondaryS2 = Color(.sRGB, red: 94/255, green: 39/255, blue: 80/255, opacity: 1) 
        public let colorSecondaryS3 = Color(.sRGB, red: 235/255, green: 97/255, blue: 0/255, opacity: 1) 
        public let colorSecondaryS4 = Color(.sRGB, red: 254/255, green: 203/255, blue: 0/255, opacity: 1) 
        public let colorSecondaryS5 = Color(.sRGB, red: 0/255, green: 138/255, blue: 0/255, opacity: 1) 
        public let colorSecondaryS6 = Color(.sRGB, red: 156/255, green: 42/255, blue: 160/255, opacity: 1) 
        public let colorSecondaryS7 = Color(.sRGB, red: 0/255, green: 94/255, blue: 165/255, opacity: 1) 
        public let colorSecondaryS8 = Color(.sRGB, red: 0/255, green: 150/255, blue: 173/255, opacity: 1) 
        public let colorSecondaryS9 = Color(.sRGB, red: 190/255, green: 190/255, blue: 190/255, opacity: 1) 
        public let colorSecondaryS10 = Color(.sRGB, red: 189/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Monochrome
        public let colorMonochromeMc1 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colorMonochromeMc2 = Color(.sRGB, red: 242/255, green: 242/255, blue: 242/255, opacity: 1) 
        public let colorMonochromeMc3 = Color(.sRGB, red: 190/255, green: 190/255, blue: 190/255, opacity: 1) 
        public let colorMonochromeMc4 = Color(.sRGB, red: 126/255, green: 126/255, blue: 126/255, opacity: 1) 
        public let colorMonochromeMc5 = Color(.sRGB, red: 38/255, green: 38/255, blue: 38/255, opacity: 1) 
        public let colorMonochromeMc6 = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 
        public let colorMonochromeMc7 = Color(.sRGB, red: 26/255, green: 26/255, blue: 26/255, opacity: 1) 

        // Transparent
        public let colorTransparentOp1 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 0.15) 
        public let colorTransparentOp2 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 0.3) 
        public let colorTransparentOp3 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 0.75) 
        public let colorTransparentOp4 = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 0.15) 
        public let colorTransparentOp5 = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 0.3) 
        public let colorTransparentOp6 = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 0.75) 

        // Interaction
        public let colorInteractionActive = Color(.sRGB, red: 184/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorInteractionHover = Color(.sRGB, red: 207/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorInteractionActive2 = Color(.sRGB, red: 0/255, green: 84/255, blue: 99/255, opacity: 1) 
        public let colorInteractionHover2 = Color(.sRGB, red: 0/255, green: 95/255, blue: 112/255, opacity: 1) 
        public let colorInteractionActive3 = Color(.sRGB, red: 188/255, green: 78/255, blue: 0/255, opacity: 1) 
        public let colorInteractionHover3 = Color(.sRGB, red: 212/255, green: 87/255, blue: 0/255, opacity: 1) 
        public let colorInteractionPressed = Color(.sRGB, red: 161/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorInteractionPhover = Color(.sRGB, red: 195/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorInteractionPDisabled = Color(.sRGB, red: 237/255, green: 150/255, blue: 150/255, opacity: 1) 
        public let colorInteractionGreen2 = Color(.sRGB, red: 0/255, green: 97/255, blue: 0/255, opacity: 1) 
        public let colorInteractionGrey2 = Color(.sRGB, red: 86/255, green: 86/255, blue: 86/255, opacity: 1) 
        public let colorInteractionGrey3 = Color(.sRGB, red: 151/255, green: 151/255, blue: 151/255, opacity: 1) 

        // Background

        // Primary

        /// Default Brand Color
        public let colorBackgroundPrimaryDefault = Color(.sRGB, red: 230/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorBackgroundPrimaryHover = Color(.sRGB, red: 207/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorBackgroundPrimaryActive = Color(.sRGB, red: 189/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Surface
        public let colorBackgroundSurfaceHover = Color(.sRGB, red: 242/255, green: 242/255, blue: 242/255, opacity: 1) 
        public let colorBackgroundSurfaceDefault = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colorBackgroundSurfaceActive = Color(.sRGB, red: 190/255, green: 190/255, blue: 190/255, opacity: 1) 

        // Basic
        public let colorBackgroundBasicSecondry = Color(.sRGB, red: 242/255, green: 242/255, blue: 242/255, opacity: 1) 
        public let colorBackgroundBasicDefault = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colorBackgroundBasicTeratary = Color(.sRGB, red: 190/255, green: 190/255, blue: 190/255, opacity: 1) 
        public let colorBackgroundBasicQuaternary = Color(.sRGB, red: 126/255, green: 126/255, blue: 126/255, opacity: 1) 

        // Neutrals
        public let colorBackgroundNeutralsDefault = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 

        // State

        // Error
        public let colorBackgroundStateErrorDefault = Color(.sRGB, red: 189/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Success
        public let colorBackgroundStateSuccessDefault = Color(.sRGB, red: 0/255, green: 138/255, blue: 0/255, opacity: 1) 
        public let colorBackgroundStateSuccessPressed = Color(.sRGB, red: 0/255, green: 97/255, blue: 0/255, opacity: 1) 

        // Pressed
        public let colorBackgroundStatePressedPrimary = Color(.sRGB, red: 161/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorBackgroundStatePressedSButton = Color(.sRGB, red: 86/255, green: 86/255, blue: 86/255, opacity: 1) 

        // Hover
        public let colorBackgroundStateHoverDefault = Color(.sRGB, red: 195/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Disabled
        public let colorBackgroundStateDisabledWhite = Color(.sRGB, red: 237/255, green: 150/255, blue: 150/255, opacity: 1) 
        public let colorBackgroundStateDisabledSButton = Color(.sRGB, red: 151/255, green: 151/255, blue: 151/255, opacity: 1) 

        // Foreground

        // Primary
        public let colorForegroundPrimaryDefault = Color(.sRGB, red: 230/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorForegroundPrimaryHover = Color(.sRGB, red: 207/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorForegroundPrimaryActive = Color(.sRGB, red: 189/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Secondry
        public let colorForegroundSecondryDefault = Color(.sRGB, red: 0/255, green: 105/255, blue: 124/255, opacity: 1) 
        public let colorForegroundSecondryHover = Color(.sRGB, red: 0/255, green: 95/255, blue: 112/255, opacity: 1) 
        public let colorForegroundSecondryActive = Color(.sRGB, red: 0/255, green: 84/255, blue: 99/255, opacity: 1) 

        // Teratry
        public let colorForegroundTeratryDefault = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 
        public let colorForegroundTeratryHover = Color(.sRGB, red: 26/255, green: 26/255, blue: 26/255, opacity: 1) 
        public let colorForegroundTeratryActive = Color(.sRGB, red: 126/255, green: 126/255, blue: 126/255, opacity: 1) 

        // Default
        public let colorForegroundDefaultNeutral = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 
        public let colorForegroundDefaultFaded = Color(.sRGB, red: 38/255, green: 38/255, blue: 38/255, opacity: 1) 
        public let colorForegroundDefaultWhite = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 

        // State

        // Error
        public let colorForegroundStateErrorDefault = Color(.sRGB, red: 189/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Success
        public let colorForegroundStateSuccessDefault = Color(.sRGB, red: 0/255, green: 138/255, blue: 0/255, opacity: 1) 

        // Border

        // Default
        public let colorBorderDefaultPrimary = Color(.sRGB, red: 242/255, green: 242/255, blue: 242/255, opacity: 1) 
        public let colorBorderDefaultSecondry = Color(.sRGB, red: 190/255, green: 190/255, blue: 190/255, opacity: 1) 
        public let colorBorderDefaultWhite = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 

        // Accent
        public let colorBorderAccentHighlighted = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 
        public let colorBorderAccentBrand = Color(.sRGB, red: 230/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorBorderAccentFocused = Color(.sRGB, red: 0/255, green: 150/255, blue: 173/255, opacity: 1) 

        // Text

        // Default
        public let colorTextDefaultBrand = Color(.sRGB, red: 230/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorTextDefaultWhite = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colorTextDefaultSecondry = Color(.sRGB, red: 38/255, green: 38/255, blue: 38/255, opacity: 1) 
        public let colorTextDefaultNeutral = Color(.sRGB, red: 13/255, green: 13/255, blue: 13/255, opacity: 1) 

        // Link
        public let colorTextLinkHover = Color(.sRGB, red: 184/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colorTextLinkVisited = Color(.sRGB, red: 156/255, green: 42/255, blue: 160/255, opacity: 1) 
    }
}